下記の処理について、Fizz、Buzz、FizzBuzz、数値それぞれのケースで式がどのように評価されるかを考察する。

プログラム
for (i = 1; i < 101; i++)
  console.log((i % 3 ? "" : "Fizz") + (i % 5 ? "" : "Buzz") || i);

for文で100回処理を繰り返す。

〇三項演算子
4.13.1に記載されている、三項演算子が使用されている。
"先頭のオペランド"?"2番目のオペランド":"３番目のオペランド"の形
先頭のオペランドがtrueに変換できる場合、2番目のオペランドを評価し、その値を返す。先頭のオペランドがfalseに変換できる場合は3番目のオペランドの値を評価し、その値を返す。

〇Fizzのケース。
(i % 3 ? "" : "Fizz")
i % 3の部分で、変数iを3で割る。
・割り切れる場合は0として評価される。javascriptでは数値0はfalseと評価されるので3番目のオペランドの値、Fizzが返される。
・割り切れない場合は、あまりの値が数値として評価される。javascriptでは、falseとみなされる数値0以外はTrueと表かされるので、2番目のオペランドの値""が返される。

〇Buzzのケース。
Fizzの場合と同様の処理が行われる。異なる点は、三項演算子の最初のオペランドがi%5となっており、変数iを5で割ったあまりを評価対象としていること。

〇FizzBuzzのケース。
(i % 3 ? "" : "Fizz") + (i % 5 ? "" : "Buzz")
FizzBuzzと値を返すケースは、i%3の結果が0となり、i%5の値が0となる場合。変数iが15の倍数の時が該当する。

〇数値のケース。
(i % 3 ? "" : "Fizz") + (i % 5 ? "" : "Buzz") || i
4.10.2の記載の通り、論理和演算子は、左辺のオペランドを先に評価する。この式がtureに変換される場合は、左辺の値をそのまま変換せずに返す。Javascriptでは、""（空文字列)はfalseとみなされるため、左辺の両方が""となる場合、変数iを返す。左辺の少なくとも1方が文字列の場合、文字列+""は文字列となり、文字列はtrueとして判定されるため、左辺の値をそのまま返す。
