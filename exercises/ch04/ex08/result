古い JavaScript のコードでは undefined と比較を行う際に:

if (foo === undefined) { ... }
ではなく以下のように書かれたコードを見ることがある (注: void 0 は undefined を返す)。

if (foo === void 0) { ... }
これにはどのような理由があるか、また今ではこのような書き方をしないのは何故か調べて回答しなさい。

〇考察
void演算子について
https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Operators/void

ECMAScript 第3版以前、1990年代後半〜2000年代初頭では、undefinedはグローバルオブジェクトで、書き換え可能な値であったとのことです。そのため、foo === undefinedはundefinedが上書きされた値との比較になり、意図した動作と異なる動きになってしまう可能性があると考えられます。

ECMAScript 第5版（2009年）以降、undefined は上書き不可に変更され、undefinedを直接使用すことが標準となった用です。

〇初めてのJavaScript 第3版 ―ES2015以降の最新ウェブ開発 
https://www.amazon.co.jp/%E5%88%9D%E3%82%81%E3%81%A6%E3%81%AEJavaScript-%E7%AC%AC3%E7%89%88-%E2%80%95ES2015%E4%BB%A5%E9%99%8D%E3%81%AE%E6%9C%80%E6%96%B0%E3%82%A6%E3%82%A7%E3%83%96%E9%96%8B%E7%99%BA-Ethan-Brown/dp/4873117836

書籍で確認したかったですが、値段が高いため断念しました。
